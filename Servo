
unsigned char myscaledVoltage;
unsigned char mysevenseg[10] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F };

unsigned int angle;                                                  // Count value of high - pertaining to the angle
unsigned char HL;                                                    // High Low

void ATD_init(void) {
    ADCON0 = 0x41;           // ON, Channel 0, Fosc/16== 500KHz, Dont Go
    ADCON1 = 0xCE;           // RA0 Analog, others are Digital, Right Allignment,
    TRISA = 0x01;
}
unsigned int ATD_read(void) {
    ADCON0 = ADCON0 | 0x04;  // GO
    while (ADCON0 & 0x04);    // wait until DONE
    return (ADRESH << 8) | ADRESL;
}
void interrupt(void) {

    if (PIR2 & 0x01) {                                           // CCP1 interrupt
        if (HL) {                                // high
            CCPR2H = angle >> 8;
            CCPR2L = angle;
            HL = 0;                      // next time low
            CCP2CON = 0x09;              // compare mode, clear output on match
            TMR1H = 0;
            TMR1L = 0;
        }
        else {                                          //low
            CCPR2H = (40000 - angle) >> 8;       // 40000 counts correspond to 20ms
            CCPR2L = (40000 - angle);
            CCP2CON = 0x08;             // compare mode, set output on match
            HL = 1;                     //next time High
            TMR1H = 0;
            TMR1L = 0;
        }

        PIR2 = PIR2 & 0xFE;
    }
}

unsigned int analog_read, count;
unsigned int GetAngle()
{
    analog_read = ATD_read();
    analog_read = analog_read >> 2;  // divided by 4 ==> 0-255
    //angle = 0.5ms -> 1000 counts; 1.75ms -> 3500 counts
    count = 1000 + ((analog_read * 25) / 2.55);     //angle= 1000 + ((k*2500)/255); 1000count=500uS to 3500count =1750us
    if (count < 1000) count = 1000;      // 0.5ms
    if (count > 3500) count = 3500;      // 1.75ms
    return count;
}

void Init()
{
    TRISC = 0x00;           // PWM output at CCP1(RC2)
    PORTC = 0x00;
    ATD_init();
    TMR1L = 0;
    TMR1H = 0;
    HL = 1;                // start high
    CCP2CON = 0x08;        // Compare mode, set output on match


    T1CON = 0x01;          // TMR1 On Fosc/4 (inc 0.5uS) with 0 prescaler (TMR1 overflow after 0xFFFF counts == 65535)==> 32.767ms

    INTCON = 0xC0;         // Enable GIE and peripheral interrupts
    PIE2 = PIE2 | 0x01;      // Enable CCP1 interrupts
    CCPR2H = 2000 >> 8;      // Value preset in a program to compare the TMR1H value to            - 1ms
    CCPR2L = 2000;         // Value preset in a program to compare the TMR1L value to

}
void main() {
    Init();
    while (1) {
        angle = GetAngle();
    }
}


